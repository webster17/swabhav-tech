
USE TRANSACTION;

-- CREATE TABLE BANK_MASTER AND BANK_TRANSACTION
CREATE TABLE `BANK_MASTER`(`ID` VARCHAR(36) PRIMARY KEY, `NAME` VARCHAR(70) NOT NULL, `BALANCE` FLOAT);
ALTER TABLE `bank_masters`
	ADD COLUMN `USERNANE` VARCHAR(50) unique NOT NULL AFTER `BALANCE`;
	
ALTER TABLE `bank_masters`
	ADD COLUMN `PASSWORD` VARCHAR(50) NOT NULL AFTER `BALANCE`;
CREATE TABLE `BANK_TRANSACTION`(`ID` INT AUTO_INCREMENT PRIMARY KEY, `BM_ID` VARCHAR(36), `AMOUNT` FLOAT, `TYPE` CHAR(1), `DATE` TIMESTAMP DEFAULT CURRENT_TIMESTAMP, CONSTRAINT FK_PersonOrder FOREIGN KEY (`BM_ID`) REFERENCES `BANK_MASTER`(`ID`));


-- PROCEDURE TO CHECK BEFORE INSERT OR UPDATE ON BANK_MASTER
DELIMITER $$
CREATE OR REPLACE PROCEDURE CHECK_BANK_MASTER
(
	NAME VARCHAR(70),
	BALANCE FLOAT 
)
BEGIN
	IF (NAME REGEXP '^[A-Za-z ]+$') = 0
	THEN
        SIGNAL SQLSTATE '50001'
		  SET MESSAGE_TEXT = 'check constraint on master.name failed!';
    END IF; 

	IF BALANCE<1000 
	THEN
		SIGNAL SQLSTATE '50002'
		SET MESSAGE_TEXT = 'check constraint on master.balance failed!';
    END IF;
END$$
DELIMITER ;


-- CREATE TRIGGER FOR INSERT
DELIMITER $$
CREATE OR REPLACE TRIGGER CHECK_MIN_INS_BALANCE_LIMIT
BEFORE INSERT
ON BANK_MASTER
FOR EACH ROW
BEGIN
	CALL CHECK_MASTER_BALANCE(NEW.NAME, NEW.BALANCE);
END$$
DELIMITER ;


-- CREATE TRIGGER FOR UPDATE
DELIMITER $$
CREATE OR REPLACE TRIGGER CHECK_MIN_UPD_BALANCE_LIMIT
BEFORE UPDATE
ON BANK_MASTER
FOR EACH ROW
BEGIN
	CALL CHECK_MASTER_BALANCE(NEW.NAME, NEW.BALANCE);
END$$
DELIMITER ;



-- PROCEDURE TO CHECK BEFORE INSERT OR UPDATE ON BANK_MASTER
DELIMITER $$
CREATE OR REPLACE PROCEDURE CHECK_BANK_TRANSACTION
(
	AMOUNT FLOAT,
	TYPE VARCHAR(1)
)
BEGIN
   IF TYPE NOT IN ("D", "d", "W", "w") 
	THEN
        SIGNAL SQLSTATE '50003'
		  SET MESSAGE_TEXT = 'check constraint on transaction.type failed!';
   END IF;
    
   IF AMOUNT<=0 
	THEN
		SIGNAL SQLSTATE '50004'
		SET MESSAGE_TEXT = 'check constraint on transaction.amount failed!';
    END IF;
END$$
DELIMITER ;


-- CREATE TRIGGER FOR INSERT
DELIMITER $$
CREATE OR REPLACE TRIGGER CHECK_MIN_INS_AMOUNT_LIMIT
BEFORE INSERT
ON BANK_TRANSACTION
FOR EACH ROW
BEGIN
	CALL CHECK_BANK_TRANSACTION(NEW.AMOUNT, NEW.TYPE);
END$$
DELIMITER ;


-- CREATE TRIGGER FOR UPDATE
DELIMITER $$
CREATE OR REPLACE TRIGGER CHECK_MIN_UPD_AMOUNT_LIMIT
BEFORE UPDATE
ON BANK_TRANSACTION
FOR EACH ROW
BEGIN
    SIGNAL SQLSTATE '50005'
	SET MESSAGE_TEXT = 'check constraint on transaction update not allowed!';
END$$
DELIMITER ;


